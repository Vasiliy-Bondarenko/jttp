<?php namespace Tests;

use PHPUnit\Framework\TestCase;
use Jttp\JsonException;
use Jttp\Jttp;

class JttpTest extends TestCase
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function can_init()
    {
        // given
        $client = new Jttp();

        // assertions
        $this->assertInternalType("object", $client);
    }

    /** @test */
    public function get_ok()
    {
        // action
        $result = (new Jttp)->url("https://httpbin.org/get")->get();

        // assertions
        $this->assertTrue($result->isOk());
        $this->assertInternalType("array", $result->json());
        $this->assertEquals("httpbin.org", $result->json()["headers"]["Host"]);
    }

    /** @test */
    public function if_bad_json_returned_body_ok_json_throws()
    {
        // action
        $result = (new Jttp)->get("https://httpbin.org/base64/SFRUUEJJTiBpcyBhd2Vzb21l");

        // assertions
        $this->assertTrue($result->isOk());
        $this->assertEquals("HTTPBIN is awesome", $result->body());
        $this->expectException(JsonException::class);
        $result->json();
    }

    /** @test */
    public function get_404()
    {
        // action
        $result = (new Jttp)->get("https://httpbin.org/status/404");

        // assertions
        $this->assertFalse($result->isOk());
        $this->assertEquals(404, $result->status());
    }

    /** @test */
    public function post_ok()
    {
        // action
        $result = (new Jttp)->url("https://httpbin.org/post")->post();

        // assertions
        $this->assertTrue($result->isOk());
        $this->assertInternalType("array", $result->json());
        $this->assertEquals("httpbin.org", $result->json()["headers"]["Host"]);
    }

    // can post arbitrary data
    // return binary data
}

